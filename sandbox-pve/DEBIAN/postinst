#!/bin/bash

# postinst script for hobbit

# summary of how this script can be called:
#        * <postinst> `configure' <most-recently-configured-version>
#        * <old-postinst> `abort-upgrade' <new version>
#        * <conflictor's-postinst> `abort-remove' `in-favour' <package>
#          <new-version>
#        * <deconfigured's-postinst> `abort-deconfigure' `in-favour'
#          <failed-install-package> <version> `removing'
#          <conflicting-package> <version>
# for details, see http://www.debian.org/doc/debian-policy/ or
# the debian-policy package
#

. /usr/share/debconf/confmodule

#set -e

case "$1" in
        configure)

		#### Chemins
		PVECTL_BIN=/usr/bin/pvectl
		VZCTL_BIN=/usr/sbin/vzctl
		VZ_BIN=/var/lib/vz/private
		
		#### Variables
		VMID=10
		#VM_NAME='DHCP_DNS_server'
		OS_TEMPLATE='local:vztmpl/debian-6.0-standard_6.0-4_i386.tar.gz'
		DISK_SPACE=4
		SWAP=512
		MEMORY=1024
		CPUS=1
		NETIF='ifname=eth0,bridge=vmbr1'
		ONBOOT=yes
		
		HOST_NAME=$(hostname)
		DOMAIN=$(hostname -d)
		PASSWORD='password'
		IP_HOST=$(ifconfig vmbr0 | grep 'inet addr' | sed 's/.*addr:\([0-9]*\.[0-9]*\.[0-9]*\.[0-9]*\).*/\1/')
		MASK_HOST=$(ifconfig vmbr0 | grep 'inet addr' | sed 's/.*Mask:\([0-9]*\.[0-9]*\.[0-9]*\.[0-9]*\).*/\1/')
		BROAD_HOST=$(ifconfig vmbr0 | grep 'inet addr' | sed 's/.*Bcast:\([0-9]*\.[0-9]*\.[0-9]*\.[0-9]*\).*/\1/')
		GW_HOST=$(cat /etc/network/interfaces | grep gateway | sed 's/.*gateway \([0-9]*\.[0-9]*\.[0-9]*\.[0-9]*\).*/\1/')
		NAME_SERVER=$GW_HOST
		
		echo " │ SANDBOX-PVE-MBS package"
		
		## READ variables
		#read -p " ├ Host name : " HOST_NAME
		#read -p " ├ Domain name : " DOMAIN
		#read -p " ├ VM password : " PASSWORD
		#read -p " ├ Address IP Nameserver : " NAME_SERVER
		#read -p " ├ Address IP host : " IP_HOST
		#read -p " ├ Mask IP host : " MASK_HOST
		#read -p " ├ Broadcast host : " BROAD_HOST
		#read -p " ├ Gateway host : " GW_HOST
		#read -p " ├ Hot VM name : " VM_NAME
		#read -p " ├ Address local private network (/24) : " IP_NETWORK
		#read -p " ├ Mask network : " MASK_NETWORK

                ## DO THE DEBCONF STUFF
                db_input high sandbox-pve/server || true
                db_go || true
                db_get sandbox-pve/server
                VM_NAME="$RET"

                db_input high sandbox-pve/network || true
                db_go || true
                db_get sandbox-pve/network
                IP_NETWORK="$RET"
                db_stop


		#### Configuration réseau de l'hôte
		echo " │ Configure Networking Host"
		
		## Modification du resolv.conf
		cp /etc/resolv.conf /etc/resolv.conf.old
		echo "domain $DOMAIN" > /etc/resolv.conf
		echo "search $DOMAIN" >> /etc/resolv.conf
		echo "nameserver $NAME_SERVER">> /etc/resolv.conf
		
		## Configuration du réseau /etc/network/interfaces
		OIFS=$IFS
		IFS='.'
		IP_NETWORK_TAB=($IP_NETWORK)
		IFS=$OIFS
		
		cp /etc/interfaces /etc/interfaces.old
		echo "auto lo" > /etc/network/interfaces
		echo "iface lo inet loopback" >> /etc/network/interfaces
		echo "auto eth0.1" >> /etc/network/interfaces
		echo "iface eth0 inet manual" >> /etc/network/interfaces
		echo "auto vmbr0" >> /etc/network/interfaces
		echo "iface vmbr0 inet static" >> /etc/network/interfaces
		echo "        address $IP_HOST" >> /etc/network/interfaces
		echo "        netmask $MASK_HOST" >> /etc/network/interfaces
		echo "        broadcast $BROAD_HOST" >> /etc/network/interfaces
		echo "        gateway $GW_HOST" >> /etc/network/interfaces
		echo "        bridge_ports eth0" >> /etc/network/interfaces
		echo "        bridge_stp off" >> /etc/network/interfaces
		echo "        bridge_fd 0" >> /etc/network/interfaces
		echo "        post-up iptables -t nat -A POSTROUTING -s $IP_NETWORK/24 -o vmbr0 -j MASQUERADE" >> /etc/network/interfaces
		echo "auto vmbr1" >> /etc/network/interfaces
		echo "iface vmbr1 inet static" >> /etc/network/interfaces
		echo "        address ${IP_NETWORK_TAB[0]}.${IP_NETWORK_TAB[1]}.${IP_NETWORK_TAB[2]}.254" >> /etc/network/interfaces
		echo "        netmask 255.255.255.0" >> /etc/network/interfaces
		echo "        broadcast ${IP_NETWORK_TAB[0]}.${IP_NETWORK_TAB[1]}.${IP_NETWORK_TAB[2]}.255" >> /etc/network/interfaces
		echo "        bridge_ports eth0.1" >> /etc/network/interfaces
		echo "        bridge_stp off" >> /etc/network/interfaces
		echo "        bridge_fd 0" >> /etc/network/interfaces
		
		## Configuration IP forward /etc/sysctl.conf
		echo "net.ipv4.ip_forward=1" > /etc/sysctl.conf
		
		## Configuration /etc/hosts et /etc/hostname
		echo "127.0.0.1       localhost" > /etc/hosts
		echo "$IP_HOST     $HOST_NAME.$DOMAIN $HOST_NAME" >> /etc/hosts
		
		echo "$HOST_NAME" > /etc/hostname
		
		## Fin de configuration réseau
		sysctl -p
		sysctl kernel.hostname
		/etc/init.d/networking restart
		
		#### Mise en route de la VM1, serveur DHCP, DNS et cache APT
		echo " │ Create VM 1 - DNS/DHCP"
		$PVECTL_BIN create $VMID "$OS_TEMPLATE" -disk $DISK_SPACE -password $PASSWORD -hostname $VM_NAME -nameserver $NAME_SERVER -searchdomain $DOMAIN -onboot $ONBOOT -swap $SWAP -memory $MEMORY -cpus $CPUS -netif $NETIF
		$VZCTL_BIN set $VMID --features 'nfs:on' --save
		$VZCTL_BIN start $VMID
		
		## Configuration réseau de la VM
		echo "auto lo" > $VZ_BIN/$VMID/etc/network/interfaces
		echo "iface lo inet loopback" >> $VZ_BIN/$VMID/etc/network/interfaces
		echo "auto eth0" >> $VZ_BIN/$VMID/etc/network/interfaces
		echo "iface eth0 inet static" >> $VZ_BIN/$VMID/etc/network/interfaces
		echo "        address ${IP_NETWORK_TAB[0]}.${IP_NETWORK_TAB[1]}.${IP_NETWORK_TAB[2]}.1" >> $VZ_BIN/$VMID/etc/network/interfaces
		echo "        netmask 255.255.255.0" >> $VZ_BIN/$VMID/etc/network/interfaces
		echo "        gateway ${IP_NETWORK_TAB[0]}.${IP_NETWORK_TAB[1]}.${IP_NETWORK_TAB[2]}.254" >> $VZ_BIN/$VMID/etc/network/interfaces
		
		$VZCTL_BIN exec $VMID 'ifdown eth0 && ifup eth0'
		$VZCTL_BIN exec $VMID 'apt-key update && apt-get update && apt-get -y upgrade'
		
		## Installation et configuration DNSMASQ
		echo "domain-needed" > $VZ_BIN/$VMID/etc/dnsmasq.conf
		echo "bogus-priv" >> $VZ_BIN/$VMID/etc/dnsmasq.conf
		echo "interface=eth0" >> $VZ_BIN/$VMID/etc/dnsmasq.conf
		echo "domain=$DOMAIN" >> $VZ_BIN/$VMID/etc/dnsmasq.conf
		echo "user=" >> $VZ_BIN/$VMID/etc/dnsmasq.conf
		$VZCTL_BIN exec $VMID 'apt-get -y -o Dpkg::Options::="--force-confold" install dnsmasq'
		
		## Installation et configuration DHCP3-SERVER
		echo "ddns-update-style none;" > $VZ_BIN/$VMID/etc/dhcp/dhcpd.conf
		echo "option domain-name \"$DOMAIN\";" >> $VZ_BIN/$VMID/etc/dhcp/dhcpd.conf
		echo "option domain-name-servers 10.33.22.10,10.60.22.10;" >> $VZ_BIN/$VMID/etc/dhcp/dhcpd.conf
		echo "default-lease-time 600;" >> $VZ_BIN/$VMID/etc/dhcp/dhcpd.conf
		echo "max-lease-time 7200;" >> $VZ_BIN/$VMID/etc/dhcp/dhcpd.conf
		echo "option subnet-mask 255.255.255.0;" >> $VZ_BIN/$VMID/etc/dhcp/dhcpd.conf
		echo "option broadcast-address ${IP_NETWORK_TAB[0]}.${IP_NETWORK_TAB[1]}.${IP_NETWORK_TAB[2]}.255;" >> $VZ_BIN/$VMID/etc/dhcp/dhcpd.conf
		echo "option routers ${IP_NETWORK_TAB[0]}.${IP_NETWORK_TAB[1]}.${IP_NETWORK_TAB[2]}.254;" >> $VZ_BIN/$VMID/etc/dhcp/dhcpd.conf
		echo "log-facility local7;" >> $VZ_BIN/$VMID/etc/dhcp/dhcpd.conf
		echo "subnet $IP_NETWORK netmask 255.255.255.0 {" >> $VZ_BIN/$VMID/etc/dhcp/dhcpd.conf
		echo "        range ${IP_NETWORK_TAB[0]}.${IP_NETWORK_TAB[1]}.${IP_NETWORK_TAB[2]}.2  ${IP_NETWORK_TAB[0]}.${IP_NETWORK_TAB[1]}.${IP_NETWORK_TAB[2]}.253;" >> $VZ_BIN/$VMID/etc/dhcp/dhcpd.conf
		echo "}" >> $VZ_BIN/$VMID/etc/dhcp/dhcpd.conf
		
		echo "INTERFACES=\"eth0\"" > $VZ_BIN/$VMID/etc/default/isc-dhcp-server
		$VZCTL_BIN exec $VMID 'apt-get -y -o Dpkg::Options::="--force-confold" install dhcp3-server'
		
		## Installation et configuration APT-CACHER-NG
		$VZCTL_BIN exec $VMID 'apt-get -y install apt-cacher-ng'
		echo "CacheDir: /var/cache/apt-cacher-ng" > $VZ_BIN/$VMID/etc/apt-cacher-ng/acng.conf
		echo "LogDir: /var/log/apt-cacher-ng" >> $VZ_BIN/$VMID/etc/apt-cacher-ng/acng.conf
		echo "Port:3142" >> $VZ_BIN/$VMID/etc/apt-cacher-ng/acng.conf
		echo "Remap-debrep: file:deb_mirror*.gz /debian ; file:backends_debian" >> $VZ_BIN/$VMID/etc/apt-cacher-ng/acng.conf
		echo "Remap-uburep: file:ubuntu_mirrors /ubuntu ; file:backends_ubuntu" >> $VZ_BIN/$VMID/etc/apt-cacher-ng/acng.conf
		echo "Remap-debvol: file:debvol_mirror*.gz /debian-volatile ; file:backends_debvol" >> $VZ_BIN/$VMID/etc/apt-cacher-ng/acng.conf
		echo "Remap-cygwin: file:cygwin_mirrors /cygwin # ; file:backends_cygwin # incomplete, please create this file" >> $VZ_BIN/$VMID/etc/apt-cacher-ng/acng.conf
		echo "ReportPage: acng-report.html" >> $VZ_BIN/$VMID/etc/apt-cacher-ng/acng.conf
		echo "ExTreshold: 4" >> $VZ_BIN/$VMID/etc/apt-cacher-ng/acng.conf
		
		#### Fin d'installation
		$VZCTL_BIN exec $VMID 'reboot -f'
		
		#### Copie des variables dans un fichier
		mkdir -p /var/pve
		touch /var/pve/scripts.cfg
		echo "DOMAIN=$DOMAIN" > /var/pve/scripts.cfg
		echo "IP_HOST=$IP_HOST" >> /var/pve/scripts.cfg
		echo "IP_NETWORK=$IP_NETWORK" >> /var/pve/scripts.cfg
		echo "VMID_HOT=$VMID" >> /var/pve/scripts.cfg

                ;;

        abort-upgrade|abort-remove|abort-deconfigure)
                ;;

        *)
                echo "postinst called with unknown argument \`$1'" >&2
                exit 1
                ;;
esac

exit 0

